{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\fullstack-dashboard\\\\frontend\\\\src\\\\components\\\\UserForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  onSave\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave({\n      name,\n      email,\n      contact,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: contact,\n      onChange: e => setContact(e.target.value),\n      placeholder: \"Contact\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"vtYNioPVsMxGyHF3TIQcu4D2xbg=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserForm","onSave","_s","name","setName","email","setEmail","contact","setContact","description","setDescription","handleSubmit","e","preventDefault","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/New folder (2)/fullstack-dashboard/frontend/src/components/UserForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface UserFormProps {\r\n  onSave: (userData: { name: string; email: string; contact: string; description: string }) => void;\r\n}\r\n\r\nconst UserForm: React.FC<UserFormProps> = ({ onSave }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave({ name, email, contact, description });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Name\" required />\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input type=\"text\" value={contact} onChange={(e) => setContact(e.target.value)} placeholder=\"Contact\" required />\r\n      <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" required />\r\n      <button type=\"submit\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,MAAM,CAAC;MAAEE,IAAI;MAAEE,KAAK;MAAEE,OAAO;MAAEE;IAAY,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEV,OAAA;IAAMe,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3BhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,IAAK;MAACe,QAAQ,EAAGN,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,MAAM;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxG1B,OAAA;MAAOiB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEZ,KAAM;MAACa,QAAQ,EAAGN,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,OAAO;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5G1B,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEV,OAAQ;MAACW,QAAQ,EAAGN,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,SAAS;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjH1B,OAAA;MAAUkB,KAAK,EAAER,WAAY;MAACS,QAAQ,EAAGN,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,aAAa;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpH1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACvB,EAAA,CApBIF,QAAiC;AAAA0B,EAAA,GAAjC1B,QAAiC;AAsBvC,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}